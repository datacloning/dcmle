export(dcmle, .dcmle, makeGsFit, makeDcFit)

exportMethods(
    "[",
    "[[",
    "acfplot",
    "as.array",
    "as.matrix",
    #"as.mcmc.list",
    "autocorr.diag",
    "chanames",
    "chisq.diag",
    "coef",
    #"coerce",
    "confint",
    "crosscorr.plot",
    "crosscorr",
    "dcdiag",
    "dcsd",
    "dctable",
    "densityplot",
    "densplot",
    "end",
    "frequency",
    "gelman.diag",
    "gelman.plot",
    "geweke.diag",
    "head",
    "heidel.diag",
    "lambdamax.diag",
    "mcpar",
    "nchain",
    "nclones",
    "niter",
    "nvar",
    "pairs",
    "plot",
    "qqmath",
    "quantile",
    "raftery.diag",
    "show",
    "stack",
    "start",
    "str",
    "summary",
    "tail",
    "thin",
    "time",
    "traceplot",
    "update",
    "varnames",
    "vcov",
    "window",
    "xyplot"
)
exportClasses(
     "codaMCMC",
     "custommodel",
     "dcArgs",
     "dcCodaMCMC",
     "dcdiag",
     "dcDiag",
     "dcFit",
     "dcFunction",
     "dcInits",
     "dcmle",
     "dcModel",
     "dcParams",
     "dctable",
     "dcTable",
     "gsFit",
     "mcmc",
     "mcmc.list",
     "mcmc.list.dc",
     "MCMClist",
     "nClones",
     "summary.codaMCMC",
     "summary.dcCodaMCMC",
     "summary.dcmle"
)

importFrom(stats,
       quantile,
       start,
       end,
       frequency,
       time,
       window,
       pnorm,
       printCoefmat,
       ts)
importFrom(stats4,
       coef,
       confint,
       summary,
       vcov,
       update,
       plot)
importFrom(methods,
       show,
       as,
       new)
importFrom(utils,
       stack,
       str,
       head,
       tail,
       read.table)
importFrom(graphics,
       pairs,
       par)
importFrom(lattice,
       densityplot,
       qqmath,
       xyplot)
importFrom(dclone,
       dclone,
       dcdim,
       jags.fit,
       bugs.fit,
       dc.fit,
       clean.jags.model,
       write.jags.model,
       custommodel,
       updated.model,
       dcsd,
       nclones,
       mcmcapply,
       make.symmetric,
       dctable,
       extractdctable,
       dcdiag,
       extractdcdiag,
       lambdamax.diag,
       chisq.diag,
       dcoptions,
       jags.parfit,
       bugs.parfit,
       dc.parfit,
       clusterSize,
       plotClusterSize,
       clusterSplitSB,
       parLapplySB,
       parLapplySLB,
       parallel.inits,
       mclapplySB,
       evalParallelArgument,
       parDose)
importFrom(coda,
       as.mcmc.list,
       mcmc,
       is.mcmc.list,
       mcmc.list,
       "varnames<-",
       varnames,
       chanames,
       thin,
       gelman.diag,
       geweke.diag,
       raftery.diag,
       heidel.diag,
       acfplot,
       autocorr.diag,
       traceplot,
       densplot,
       crosscorr.plot,
       crosscorr,
       mcpar,
       nchain,
       niter,
       nvar)
#importFrom(rjags)
S3method(as.mcmc.list, default, .as_mcmc_list_default)
